cmake:
	cmake -B build . $(if $(D),-DCMAKE_BUILD_TYPE=Debug,-DCMAKE_BUILD_TYPE=Release) $(CMAKEARGS)
	$(MAKE) -C build $(if $(V),VERBOSE=1)

dirname=$(dir $(patsubst %/,%,$1))

boostasiohpp=$(firstword $(wildcard $(addsuffix /include/boost/asio.hpp,/usr/local /opt/local $(wildcard /usr/local/opt/boost*) /usr)))
BOOSTDIR=$(call dirname,$(call dirname,$(call dirname,$(boostasiohpp))))
BOOSTINC=$(firstword $(wildcard $(BOOSTDIR)/include $(BOOSTDIR)))

# note: on windows: pass CXX=cl and BOOSTDIR=c:/local/boost_1_xx_y  on the make commandline

cpputilssplit=$(firstword $(wildcard $(addsuffix /string-split.h, cpputils submodules/cpputils ../cpputils ../../cpputils)))
CPPUTILSDIR=$(call dirname,$(cpputilssplit))

hdmachmemory=$(firstword $(wildcard $(addsuffix /machmemory.h, hexdumper submodules/hexdumper ../hexdumper ../../hexdumper)))
HEXDUMPERDIR=$(call dirname,$(hdmachmemory))


ifneq ($(wildcard /System/Library/Extensions),)
OSTYPE=darwin
endif
ifneq ($(wildcard $(SystemRoot)/explorer.exe $(SYSTEMROOT)/explorer.exe),)
OSTYPE=windows
endif

LDFLAGS+=-L/usr/local/lib -lboost_regex
LDFLAGS+=$(if $(filter $(OSTYPE),darwin),-framework Security)

findstr: findstr.o $(if $(filter $(OSTYPE),darwin),machmemory.o)


%: %.o
	$(CXX) -g -o $@ $^ -O3 -L$(BOOSTDIR)/lib $(LDFLAGS)
INCS=-I $(CPPUTILSDIR) -I $(HEXDUMPERDIR) -I $(BOOSTINC)

CFLAGS+=-Wall -g $(if $(D),-O0,-O3)
CFLAGS+=$(if $(filter $(OSTYPE),windows),-std:c++17,-std=c++17)
CFLAGS+=-DUSE_BOOST_REGEX
#CFLAGS+=-DUSE_STD_REGEX
#CFLAGS+=-DWITH_MEMSEARCH

%.o: %.cpp
	$(CXX) $(CFLAGS) -c -o $@ $^ $(INCS)
%.o: $(HEXDUMPERDIR)/%.cpp
	$(CXX) $(CFLAGS) -c -o $@ $^ $(INCS)

clean:
	$(RM) findstr $(wildcard *.o)
	$(RM) -r build CMakeFiles CMakeCache.txt CMakeOutput.log

installbin:
	cp findstr ~/bin/
